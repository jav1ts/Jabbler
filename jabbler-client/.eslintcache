[{"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/index.js":"1","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/reportWebVitals.js":"2","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/App.js":"3","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/index.js":"4","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/index.js":"5","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/currentUser.js":"6","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/errors.js":"7","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actionTypes.js":"8","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Navbar.js":"9","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Main.js":"10","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/Homepage.js":"11","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/AuthForm.js":"12","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/auth.js":"13","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/services/api.js":"14","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/errors.js":"15"},{"size":511,"mtime":1610429068303,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610297788302,"results":"18","hashOfConfig":"17"},{"size":472,"mtime":1610479847733,"results":"19","hashOfConfig":"17"},{"size":387,"mtime":1610428244156,"results":"20","hashOfConfig":"17"},{"size":212,"mtime":1610397350000,"results":"21","hashOfConfig":"17"},{"size":568,"mtime":1610429244998,"results":"22","hashOfConfig":"17"},{"size":348,"mtime":1610396714655,"results":"23","hashOfConfig":"17"},{"size":133,"mtime":1610396221148,"results":"24","hashOfConfig":"17"},{"size":1927,"mtime":1610961760505,"results":"25","hashOfConfig":"17"},{"size":2128,"mtime":1610916847542,"results":"26","hashOfConfig":"17"},{"size":529,"mtime":1610959418976,"results":"27","hashOfConfig":"17"},{"size":3994,"mtime":1610959416591,"results":"28","hashOfConfig":"17"},{"size":1129,"mtime":1610961220934,"results":"29","hashOfConfig":"17"},{"size":815,"mtime":1610509263560,"results":"30","hashOfConfig":"17"},{"size":193,"mtime":1610513862772,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1euoeyg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/index.js",[],["69","70"],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/reportWebVitals.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/App.js",["71"],"import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nconst store = configureStore()\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div className=\"onboarding\">\n        <Navbar />\n        <Main />\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/index.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/index.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/currentUser.js",["72"],"import { SET_CURRENT_USER } from \"../actionTypes\";\n\nconst DEFAULT_STATE = {\n    isAuthenticated: false, // hopefully be true, when logged in\n    user: {} // all the user info when logged in\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                // turn empty object into false or if there are keys, true\n                isAuthenticated: !!Object.keys(action.user).length,\n                user: action.user\n            };\n        default:\n            return state;\n    }\n};",["73","74"],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/errors.js",["75"],"import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\n\nexport default (state = { message: null }, action) => {\n    switch (action.type) {\n        case ADD_ERROR:\n            return { ...state, message: action.error };\n        case REMOVE_ERROR:\n            return { ...state, message: null };\n        default:\n            return state;\n    }\n};","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actionTypes.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Navbar.js",["76"],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Main.js",["77"],"import React from 'react';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Homepage from '../components/Homepage';\nimport AuthForm from '../components/AuthForm';\nimport { authUser } from '../store/actions/auth';\nimport { removeError } from \"../store/actions/errors\";\n\nconst Main = props => {\n    const { authUser, errors, removeError, currentUser } = props;\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route exact path=\"/\" render={props => <Homepage currentUser={currentUser} {...props} />} />\n                <Route\n                    exact\n                    path=\"/signin\"\n                    render={props => {\n                        return (\n                            <AuthForm\n                                removeError={removeError}\n                                errors={errors}\n                                onAuth={authUser}\n                                buttonText=\"Log in\"\n                                heading=\"Welcome Back.\"\n                                {...props}\n                            />\n                        );\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/signup\"\n                    render={props => {\n                        return (\n                            <AuthForm\n                                removeError={removeError}\n                                errors={errors}\n                                onAuth={authUser}\n                                signUp\n                                buttonText=\"Sign me up!\"\n                                heading=\"Join Jabbler today.\"\n                                {...props}\n                            />\n                        );\n                    }}\n                />\n            </Switch>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: state.currentUser,\n        errors: state.errors\n    };\n}\n    \nexport default withRouter(\n    connect(mapStateToProps, { authUser, removeError })(Main)\n);","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/Homepage.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/AuthForm.js",["78","79"],"import React, { Component } from 'react';\nimport errors from '../store/reducers/errors';\n\nexport default class AuthForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            profileImageUrl: \"\"\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const authType = this.props.signUp ? \"signup\" : \"signin\";\n        this.props\n            .onAuth(authType, this.state)\n            .then(() => {\n            this.props.history.push(\"/\");\n        })\n        .catch(() => {\n            return;\n        });\n    };\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        const { email, username, password, profileImageUrl } = this.state;\n        const {\n            signUp,\n            heading,\n            buttonText,\n            errors,\n            history,\n            removeError\n        } = this.props;\n\n        history.listen(() => {\n            removeError();\n        });\n        \n        return (\n            <div>\n                <div className=\"row justify-content-md-center text-center\">\n                    <div className=\"col-md-6\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h2>{heading}</h2>\n                            {errors.message && (\n                                <div className=\"alert alert-danger\">{errors.message}</div>\n                            )}\n                            <label htmlFor=\"email\">Email:</label>\n                            <input\n                                autoComplete=\"off\"\n                                className=\"form-control\"\n                                id=\"email\"\n                                name=\"email\"\n                                onChange={this.handleChange}\n                                value={email}\n                                type=\"text\"\n                            />\n                            <label htmlFor=\"password\">Password:</label>\n                            <input\n                                className=\"form-control\"\n                                id=\"password\"\n                                name=\"password\"\n                                onChange={this.handleChange}\n                                type=\"password\"\n                            />\n                            {signUp && (\n                                <div>\n                                    <label htmlFor=\"username\">Username:</label>\n                                    <input\n                                        className=\"form-control\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        onChange={this.handleChange}\n                                        value={username}\n                                        type=\"text\"\n                                    />\n                                    <label htmlFor=\"image-url\">Image URL:</label>\n                                    <input\n                                        className=\"form-control\"\n                                        id=\"image-url\"\n                                        name=\"profileImageUrl\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={profileImageUrl}\n                                    />\n                                </div>\n                            )}\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary btn-block btn-lg\"\n                            >\n                                {buttonText}\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/auth.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/services/api.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/errors.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":8,"column":1,"nodeType":"90","endLine":19,"endColumn":3},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":12,"endColumn":3},{"ruleId":"93","severity":1,"message":"94","line":31,"column":33,"nodeType":"95","endLine":31,"endColumn":58},{"ruleId":"84","severity":1,"message":"96","line":2,"column":37,"nodeType":"86","messageId":"87","endLine":2,"endColumn":45},{"ruleId":"84","severity":1,"message":"97","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":14},{"ruleId":"84","severity":1,"message":"98","line":33,"column":34,"nodeType":"86","messageId":"87","endLine":33,"endColumn":42},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["99"],["100"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","'errors' is defined but never used.","'password' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]