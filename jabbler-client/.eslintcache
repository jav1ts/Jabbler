[{"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/index.js":"1","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/reportWebVitals.js":"2","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/App.js":"3","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/index.js":"4","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/index.js":"5","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/currentUser.js":"6","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/errors.js":"7","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actionTypes.js":"8","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Navbar.js":"9","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Main.js":"10","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/Homepage.js":"11","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/AuthForm.js":"12","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/auth.js":"13","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/services/api.js":"14","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/errors.js":"15","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/messages.js":"16","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/MessageTimeline.js":"17","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/MessageList.js":"18","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/MessageItem.js":"19","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/messages.js":"20","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/UserAside.js":"21"},{"size":511,"mtime":1610429068303,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1610297788302,"results":"24","hashOfConfig":"23"},{"size":888,"mtime":1611002090795,"results":"25","hashOfConfig":"23"},{"size":387,"mtime":1610428244156,"results":"26","hashOfConfig":"23"},{"size":261,"mtime":1611001075797,"results":"27","hashOfConfig":"23"},{"size":568,"mtime":1610429244998,"results":"28","hashOfConfig":"23"},{"size":348,"mtime":1610396714655,"results":"29","hashOfConfig":"23"},{"size":227,"mtime":1611000305746,"results":"30","hashOfConfig":"23"},{"size":1927,"mtime":1610961760505,"results":"31","hashOfConfig":"23"},{"size":2128,"mtime":1610916847542,"results":"32","hashOfConfig":"23"},{"size":664,"mtime":1611043825245,"results":"33","hashOfConfig":"23"},{"size":3994,"mtime":1610959416591,"results":"34","hashOfConfig":"23"},{"size":1310,"mtime":1611001427955,"results":"35","hashOfConfig":"23"},{"size":584,"mtime":1611039032995,"results":"36","hashOfConfig":"23"},{"size":193,"mtime":1610513862772,"results":"37","hashOfConfig":"23"},{"size":279,"mtime":1611026518335,"results":"38","hashOfConfig":"23"},{"size":418,"mtime":1611044255650,"results":"39","hashOfConfig":"23"},{"size":1108,"mtime":1611040126591,"results":"40","hashOfConfig":"23"},{"size":922,"mtime":1611043549960,"results":"41","hashOfConfig":"23"},{"size":532,"mtime":1611039200558,"results":"42","hashOfConfig":"23"},{"size":597,"mtime":1611044383524,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1euoeyg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/index.js",[],["94","95"],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/reportWebVitals.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/App.js",["96"],"import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport { setAuthorizationToken, setCurrentUser } from '../store/actions/auth';\nimport jwtDecode from 'jwt-decode';\n\nconst store = configureStore()\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  // prevent someone from manually tampering with the key of jwtToken localStorage\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div className=\"onboarding\">\n        <Navbar />\n        <Main />\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/index.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/index.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/currentUser.js",["97"],"import { SET_CURRENT_USER } from \"../actionTypes\";\n\nconst DEFAULT_STATE = {\n    isAuthenticated: false, // hopefully be true, when logged in\n    user: {} // all the user info when logged in\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                // turn empty object into false or if there are keys, true\n                isAuthenticated: !!Object.keys(action.user).length,\n                user: action.user\n            };\n        default:\n            return state;\n    }\n};","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/errors.js",["98"],"import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\n\nexport default (state = { message: null }, action) => {\n    switch (action.type) {\n        case ADD_ERROR:\n            return { ...state, message: action.error };\n        case REMOVE_ERROR:\n            return { ...state, message: null };\n        default:\n            return state;\n    }\n};","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actionTypes.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Navbar.js",["99"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../store/actions/auth';\nimport Logo from '../images/warbler-logo.png';\n\nclass Navbar extends Component {\n    logout = e => {\n        e.preventDefault();\n        this.props.logout();\n    }\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <Link to=\"/\" className=\"navbar-brand\">\n                            <img src={Logo} alt=\"Jabbler Home\" />\n                        </Link>\n                    </div>\n                    {this.props.currentUser.isAuthenticated ? (\n                        <ul className=\"nav-navbar-nav navbar-right\">\n                            <li>\n                                <Link\n                                    to={`/users/${this.props.currentUser.user.id}/messages/new`}\n                                >\n                                    New Message\n                                </Link>\n                            </li>\n                            <li>\n                                <a onClick={this.logout}>Log out</a>\n                            </li>\n                        </ul>\n                    ) : (\n                    <ul className=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <Link to=\"/signup\">Sign up</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/signin\">Log in</Link>\n                        </li>\n                    </ul>\n                    )}\n                </div>\n            </nav>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: state.currentUser\n    };\n}\n\nexport default connect(mapStateToProps, { logout })(Navbar);","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/Main.js",["100"],"import React from 'react';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Homepage from '../components/Homepage';\nimport AuthForm from '../components/AuthForm';\nimport { authUser } from '../store/actions/auth';\nimport { removeError } from \"../store/actions/errors\";\n\nconst Main = props => {\n    const { authUser, errors, removeError, currentUser } = props;\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route exact path=\"/\" render={props => <Homepage currentUser={currentUser} {...props} />} />\n                <Route\n                    exact\n                    path=\"/signin\"\n                    render={props => {\n                        return (\n                            <AuthForm\n                                removeError={removeError}\n                                errors={errors}\n                                onAuth={authUser}\n                                buttonText=\"Log in\"\n                                heading=\"Welcome Back.\"\n                                {...props}\n                            />\n                        );\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/signup\"\n                    render={props => {\n                        return (\n                            <AuthForm\n                                removeError={removeError}\n                                errors={errors}\n                                onAuth={authUser}\n                                signUp\n                                buttonText=\"Sign me up!\"\n                                heading=\"Join Jabbler today.\"\n                                {...props}\n                            />\n                        );\n                    }}\n                />\n            </Switch>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: state.currentUser,\n        errors: state.errors\n    };\n}\n    \nexport default withRouter(\n    connect(mapStateToProps, { authUser, removeError })(Main)\n);","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/Homepage.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/AuthForm.js",["101","102"],"import React, { Component } from 'react';\nimport errors from '../store/reducers/errors';\n\nexport default class AuthForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            profileImageUrl: \"\"\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const authType = this.props.signUp ? \"signup\" : \"signin\";\n        this.props\n            .onAuth(authType, this.state)\n            .then(() => {\n            this.props.history.push(\"/\");\n        })\n        .catch(() => {\n            return;\n        });\n    };\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        const { email, username, password, profileImageUrl } = this.state;\n        const {\n            signUp,\n            heading,\n            buttonText,\n            errors,\n            history,\n            removeError\n        } = this.props;\n\n        history.listen(() => {\n            removeError();\n        });\n        \n        return (\n            <div>\n                <div className=\"row justify-content-md-center text-center\">\n                    <div className=\"col-md-6\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h2>{heading}</h2>\n                            {errors.message && (\n                                <div className=\"alert alert-danger\">{errors.message}</div>\n                            )}\n                            <label htmlFor=\"email\">Email:</label>\n                            <input\n                                autoComplete=\"off\"\n                                className=\"form-control\"\n                                id=\"email\"\n                                name=\"email\"\n                                onChange={this.handleChange}\n                                value={email}\n                                type=\"text\"\n                            />\n                            <label htmlFor=\"password\">Password:</label>\n                            <input\n                                className=\"form-control\"\n                                id=\"password\"\n                                name=\"password\"\n                                onChange={this.handleChange}\n                                type=\"password\"\n                            />\n                            {signUp && (\n                                <div>\n                                    <label htmlFor=\"username\">Username:</label>\n                                    <input\n                                        className=\"form-control\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        onChange={this.handleChange}\n                                        value={username}\n                                        type=\"text\"\n                                    />\n                                    <label htmlFor=\"image-url\">Image URL:</label>\n                                    <input\n                                        className=\"form-control\"\n                                        id=\"image-url\"\n                                        name=\"profileImageUrl\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={profileImageUrl}\n                                    />\n                                </div>\n                            )}\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary btn-block btn-lg\"\n                            >\n                                {buttonText}\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/auth.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/services/api.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/errors.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/reducers/messages.js",["103"],"import { LOAD_MESSAGES, REMOVE_MESSAGE } from '../actionTypes';\n\nconst message = (state = [], action) => {\n    switch (action.type) {\n        case LOAD_MESSAGES:\n            return [...action.messages];\n        default:\n            return state;\n    }\n};\n\nexport default message;","/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/MessageTimeline.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/containers/MessageList.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/MessageItem.js",[],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/store/actions/messages.js",["104"],"/Users/javitsarias/Desktop/Projects/Jabbler/jabbler-client/src/components/UserAside.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":8,"column":1,"nodeType":"115","endLine":19,"endColumn":3},{"ruleId":"113","severity":1,"message":"114","line":3,"column":1,"nodeType":"115","endLine":12,"endColumn":3},{"ruleId":"116","severity":1,"message":"117","line":31,"column":33,"nodeType":"118","endLine":31,"endColumn":58},{"ruleId":"109","severity":1,"message":"119","line":2,"column":37,"nodeType":"111","messageId":"112","endLine":2,"endColumn":45},{"ruleId":"109","severity":1,"message":"120","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"121","line":33,"column":34,"nodeType":"111","messageId":"112","endLine":33,"endColumn":42},{"ruleId":"109","severity":1,"message":"122","line":1,"column":25,"nodeType":"111","messageId":"112","endLine":1,"endColumn":39},{"ruleId":"109","severity":1,"message":"122","line":3,"column":25,"nodeType":"111","messageId":"112","endLine":3,"endColumn":39},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","'errors' is defined but never used.","'password' is assigned a value but never used.","'REMOVE_MESSAGE' is defined but never used.","no-global-assign","no-unsafe-negation"]